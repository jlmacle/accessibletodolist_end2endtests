[INFO] Scanning for projects...
[INFO] 
[INFO] --------------< jl.forthem:accessible-todo-list_back-end >--------------
[INFO] Building simple-accessible-todolist_backend 0.0.1-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot-maven-plugin:2.3.3.RELEASE:run (default-cli) > test-compile @ accessible-todo-list_back-end >>>
[INFO] 
[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ accessible-todo-list_back-end ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] Copying 0 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ accessible-todo-list_back-end ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.1.0:testResources (default-testResources) @ accessible-todo-list_back-end ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory C:\_Synchronized_Code\ATL\simple-accessible-todolist_backend\src\test\resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ accessible-todo-list_back-end ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] <<< spring-boot-maven-plugin:2.3.3.RELEASE:run (default-cli) < test-compile @ accessible-todo-list_back-end <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot-maven-plugin:2.3.3.RELEASE:run (default-cli) @ accessible-todo-list_back-end ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.3.3.RELEASE)

- INFO  j.f.AccessibleTodoListBackEndApplication : Starting AccessibleTodoListBackEndApplication on DESKTOP-CL5VKH3 with PID 13720 (C:\_Synchronized_Code\ATL\simple-accessible-todolist_backend\target\classes started by jeanl in C:\_Synchronized_Code\ATL\simple-accessible-todolist_backend)
-- INFO  j.f.AccessibleTodoListBackEndApplication : No active profile set, falling back to default profiles: default
-- INFO  .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFERRED mode.
-- INFO  .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 106ms. Found 2 JPA repository interfaces.
-- INFO  o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
-- INFO  o.apache.catalina.core.StandardService   : Starting service [Tomcat]
-- INFO  org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.37]
-- INFO  o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
-- INFO  w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2376 ms
-- INFO  jl.forthem.Configuration                 : Valeur de DB_URL: jdbc:postgresql://localhost:5432/todolist
-- INFO  jl.forthem.Configuration                 : Valeur de DB_USERNAME: jlacl
-- INFO  jl.forthem.Configuration                 : Valeur de DB_PASSWORD: jlacl
-- INFO  o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
-- INFO  o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
-- WARN  JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
-- INFO  org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.4.20.Final
-- INFO  o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
-- INFO  com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
-- INFO  o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
-- INFO  DeferredRepositoryInitializationListener : Triggering deferred initialization of Spring Data repositoriesï¿½
-- INFO  com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
-- INFO  org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
-Hibernate: alter table tdl_item drop constraint FKfxay8ru369ndhyrhr8jsfjs30
Hibernate: drop table if exists tdl_category cascade
Hibernate: drop table if exists tdl_item cascade
Hibernate: create table tdl_category (category_id  serial not null, category_name varchar(255), primary key (category_id))
Hibernate: create table tdl_item (item_id  serial not null, category_id int4, item_name varchar(255), primary key (item_id))
Hibernate: alter table tdl_item add constraint FKfxay8ru369ndhyrhr8jsfjs30 foreign key (category_id) references tdl_category
- INFO  o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
-- INFO  j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
-- INFO  DeferredRepositoryInitializationListener : Spring Data repositories initialized!
-- INFO  j.f.AccessibleTodoListBackEndApplication : Started AccessibleTodoListBackEndApplication in 6.053 seconds (JVM running for 6.871)
-Hibernate: select category0_.category_id as category1_0_0_, category0_.category_name as category2_0_0_ from tdl_category category0_ where category0_.category_id=?
Hibernate: insert into tdl_category (category_name) values (?)
- INFO  o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
-- INFO  o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
-- INFO  o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
-Hibernate: select item0_.item_id as item_id1_1_, item0_.category_id as category2_1_, item0_.item_name as item_nam3_1_ from tdl_item item0_
Hibernate: select category0_.category_id as category1_0_, category0_.category_name as category2_0_ from tdl_category category0_
Hibernate: select category0_.category_id as category1_0_, category0_.category_name as category2_0_ from tdl_category category0_
Hibernate: select item0_.item_id as item_id1_1_, item0_.category_id as category2_1_, item0_.item_name as item_nam3_1_ from tdl_item item0_
Hibernate: select category0_.category_id as category1_0_, category0_.category_name as category2_0_ from tdl_category category0_
Hibernate: select item0_.item_id as item_id1_1_, item0_.category_id as category2_1_, item0_.item_name as item_nam3_1_ from tdl_item item0_
Hibernate: select category0_.category_id as category1_0_, category0_.category_name as category2_0_ from tdl_category category0_
Hibernate: select item0_.item_id as item_id1_1_, item0_.category_id as category2_1_, item0_.item_name as item_nam3_1_ from tdl_item item0_
Hibernate: select category0_.category_id as category1_0_, category0_.category_name as category2_0_ from tdl_category category0_
Hibernate: select item0_.item_id as item_id1_1_, item0_.category_id as category2_1_, item0_.item_name as item_nam3_1_ from tdl_item item0_
Hibernate: select category0_.category_id as category1_0_, category0_.category_name as category2_0_ from tdl_category category0_
Hibernate: select item0_.item_id as item_id1_1_, item0_.category_id as category2_1_, item0_.item_name as item_nam3_1_ from tdl_item item0_
Hibernate: select category0_.category_id as category1_0_, category0_.category_name as category2_0_ from tdl_category category0_
Hibernate: select item0_.item_id as item_id1_1_, item0_.category_id as category2_1_, item0_.item_name as item_nam3_1_ from tdl_item item0_
Hibernate: select category0_.category_id as category1_0_, category0_.category_name as category2_0_ from tdl_category category0_
Hibernate: select item0_.item_id as item_id1_1_, item0_.category_id as category2_1_, item0_.item_name as item_nam3_1_ from tdl_item item0_
Hibernate: select category0_.category_id as category1_0_, category0_.category_name as category2_0_ from tdl_category category0_
Hibernate: select item0_.item_id as item_id1_1_, item0_.category_id as category2_1_, item0_.item_name as item_nam3_1_ from tdl_item item0_
